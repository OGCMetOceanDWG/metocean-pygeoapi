components:
  parameters:
    f:
      description: The optional f parameter indicates the output format which the
        server shall provide as part of the response document.  The default format
        is GeoJSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: json
        enum:
        - json
        - html
        - jsonld
        type: string
      style: form
    properties:
      description: The properties that should be included for each feature. The parameter
        value is a comma-separated list of property names.
      explode: false
      in: query
      name: properties
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    skipGeometry:
      description: This option can be used to skip response geometries for each feature.
      explode: false
      in: query
      name: skipGeometry
      required: false
      schema:
        default: false
        type: boolean
      style: form
    sortby:
      description: The optional sortby parameter indicates the sort property and order
        on which the server shall present results in the response document using the
        convention `sortby=PROPERTY:X`, where `PROPERTY` is the sort property and
        `X` is the sort order (`A` is ascending, `D` is descending). Sorting by multiple
        properties is supported by providing a comma-separated list.
      explode: false
      in: query
      name: sortby
      required: false
      schema:
        type: string
      style: form
    startindex:
      description: The optional startindex parameter indicates the index within the
        result set from which the server shall begin presenting results in the response
        document.  The first element has an index of 0 (default).
      explode: false
      in: query
      name: startindex
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
  responses:
    '200':
      description: successful operation
    Queryables:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryables'
      description: successful queryables operation
    default:
      content:
        application/json:
          schema:
            $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/exception.yaml
      description: Unexpected error
  schemas:
    queryable:
      properties:
        description:
          description: a human-readable narrative describing the queryable
          type: string
        language:
          default:
          - en
          description: the language used for the title and description
          type: string
        queryable:
          description: the token that may be used in a CQL predicate
          type: string
        title:
          description: a human readable title for the queryable
          type: string
        type:
          description: the data type of the queryable
          type: string
        type-ref:
          description: a reference to the formal definition of the type
          format: url
          type: string
      required:
      - queryable
      - type
      type: object
    queryables:
      properties:
        queryables:
          items:
            $ref: '#/components/schemas/queryable'
          type: array
      required:
      - queryables
      type: object
info:
  contact:
    email: you@example.org
    name: Organization Name
    url: https://pygeoapi.io
  description: pygeoapi provides an API to geospatial data
  license:
    name: CC-BY 4.0 license
    url: https://creativecommons.org/licenses/by/4.0/
  termsOfService: https://creativecommons.org/licenses/by/4.0/
  title: pygeoapi default instance
  version: 0.10.dev0
  x-keywords:
  - geospatial
  - data
  - api
openapi: 3.0.2
paths:
  /:
    get:
      description: Landing page
      operationId: getLandingPage
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Landing page
      tags:
      - server
  /collections:
    get:
      description: Collections
      operationId: getCollections
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collections
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Collections
      tags:
      - server
  /conformance:
    get:
      description: API conformance definition
      operationId: getConformanceDeclaration
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: API conformance definition
      tags:
      - server
  /openapi:
    get:
      description: This document
      operationId: getOpenapi
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        default:
          $ref: '#/components/responses/default'
      summary: This document
      tags:
      - server
  /processes:
    get:
      description: Processes
      operationId: getProcesses
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/responses/ProcessList.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Processes
      tags:
      - server
  /processes/hello-world:
    get:
      description: An example process that takes a name as input, and echoesit back
        as output. Intended to demonstrate a simpleprocess with a single literal input.
      operationId: describeHello-worldProcess
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Get process metadata
      tags:
      - hello-world
  /processes/hello-world/jobs:
    get:
      description: An example process that takes a name as input, and echoesit back
        as output. Intended to demonstrate a simpleprocess with a single literal input.
      operationId: getHello-worldJobs
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job list for process
      tags:
      - hello-world
    post:
      description: An example process that takes a name as input, and echoesit back
        as output. Intended to demonstrate a simpleprocess with a single literal input.
      operationId: executeHello-worldJob
      parameters:
      - description: Response type
        in: query
        name: response
        required: false
        schema:
          default: document
          enum:
          - raw
          - document
          type: string
      requestBody:
        content:
          application/json:
            example:
              inputs:
              - id: name
                type: text/plain
                value: World
              - id: message
                type: text/plain
                value: An optional message.
            schema:
              $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/execute.yaml
        description: Mandatory execute request JSON
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/responses/ExecuteAsync.yaml
        '404':
          $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/responses/NotFound.yaml
        '500':
          $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/responses/ServerError.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Process Hello World execution
      tags:
      - hello-world
  /processes/wind-calculator-demo:
    get:
      description: Wind speed and direction calculator demo
      operationId: describeWind-calculator-demoProcess
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Get process metadata
      tags:
      - wind-calculator-demo
  /processes/wind-calculator-demo/jobs:
    get:
      description: Wind speed and direction calculator demo
      operationId: getWind-calculator-demoJobs
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job list for process
      tags:
      - wind-calculator-demo
    post:
      description: Wind speed and direction calculator demo
      operationId: executeWind-calculator-demoJob
      parameters:
      - description: Response type
        in: query
        name: response
        required: false
        schema:
          default: document
          enum:
          - raw
          - document
          type: string
      requestBody:
        content:
          application/json:
            example:
              inputs:
              - id: wkt
                type: text/plain
                value: POLYGON((-120.504906 36.031332,-120.504906 46.980252,-83.692291
                  46.980252,-83.692291 36.031332,-120.504906 36.031332))
              - id: datetime
                type: text/plain
                value: 2021-02-23T00:00:00/2021-02-24T21:00:00
              - id: z
                type: text/plain
                value: '50000.0'
            schema:
              $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/execute.yaml
        description: Mandatory execute request JSON
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/responses/ExecuteAsync.yaml
        '404':
          $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/responses/NotFound.yaml
        '500':
          $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/responses/ServerError.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Process Wind speed and direction calculator demo execution
      tags:
      - wind-calculator-demo
  /stac:
    get:
      description: SpatioTemporal Asset Catalog
      operationId: getStacCatalog
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: SpatioTemporal Asset Catalog
      tags:
      - stac
servers:
- description: pygeoapi provides an API to geospatial data
  url: http://localhost:5000
tags:
- description: pygeoapi provides an API to geospatial data
  externalDocs:
    description: information
    url: http://example.org
  name: server
- description: SpatioTemporal Asset Catalog
  name: stac
- description: Wind speed and direction calculator demo
  name: wind-calculator-demo
- description: An example process that takes a name as input, and echoesit back as
    output. Intended to demonstrate a simpleprocess with a single literal input.
  name: hello-world

